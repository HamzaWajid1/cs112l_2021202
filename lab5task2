#include<iostream>
using namespace std;

class parity
{
private:
	int size;
	int* arr;
	int a;
public:
	parity()
	{
		size = 0;
		arr = new int[size];
		a = 0;
	}

	void put(int num);
	void print();
	void del();
	bool test();
	~parity()
	{
		cout << "\n destructor called ";
	}
};

void parity::put(int num)
{
	
	
	int* temp = new int[size+1];
	if (size != 0)
	{
		for (int i = 0; i < size; i++)
		{
			temp[i] = arr[i];
		}
	}
	temp[size] = num;
	delete [] arr;
	arr = temp;
	size++;
	
}
void parity::print()
{
	for (int i = 0; i < size; i++)
	{
		cout << arr[i];
	}
}
void parity::del()
{
	
	size -= 1;
	int* temp = new int[size];
	for (int i = 0; i < size; i++)
	{
		temp[i] = arr[i];
	}
	delete[] arr;
	arr = temp;

}
bool parity::test()
{
	if (size % 2 == 0)
	{
		return 1;
	}
	else
	{
		return 0;
	}

}

int main()
{

	parity p;
	p.put(22);
	p.put(33);
	p.put(44);
	p.del();
	p.print();
	bool x;
	x=p.test();
	if (x)
	{
		cout << "even";

	}
	else
	{
		cout << "odd";
	}


	return 0;
}
